#pragma once

// Adafruit GFX font based on Meteocons by Alessio Atzeni (https://github.com/mediastuttgart/meteocons)
// Modified from https://github.com/kaldoran/Adafruit-Weather-Icon (only outline weather icons were kept).
// Size: 21x22. Icons: 26

// See https://demo.alessioatzeni.com/meteocons/ for visual reference
enum Meteocon {
    METEOCON_SUNSET_SUNRISE = 0, // icon for 'A'
    METEOCON_SUN,                // icon for 'B'
    METEOCON_MOON,               // icon for 'C'
    METEOCON_ECLIPSE,            // icon for 'D'
    METEOCON_WIND_SUN,           // icon for 'E'
    METEOCON_WIND,               // icon for 'F'
    // METEOCON_FREEZING,        // icon for 'G'
    METEOCON_CLOUD_SUN,          // icon for 'H'
    METEOCON_CLOUD_MOON,         // icon for 'I'
    METEOCON_FOG_SUN,            // icon for 'J'
    METEOCON_FOG_MOON,           // icon for 'K'
    METEOCON_FOG_CLOUD,          // icon for 'L'
    METEOCON_FOG,                // icon for 'M'
    METEOCON_CLOUD,              // icon for 'N'
    // METEOCON_THUNDERSTORM_1,  // icon for 'O'
    METEOCON_THUNDERSTORM,       // icon for 'P'
    METEOCON_RAIN_LIGHT,         // icon for 'Q'
    METEOCON_RAIN_MEDIUM,        // icon for 'R'
    METEOCON_CLOUD_WIND,         // icon for 'S'
    METEOCON_CLOUD_WIND_RAIN,    // icon for 'T'
    METEOCON_SNOW_LIGHT,         // icon for 'U'
    // METEOCON_SNOW_LIGHT_2,    // icon for 'V'
    METEOCON_SNOW_HEAVY,         // icon for 'W'
    METEOCON_RAIN_HAIL,          // icon for 'X'
    METEOCON_CLOUD_CLOUD,        // icon for 'Y'
    METEOCON_THUNDERSTORM_CLOUD, // icon for 'Z'
    METEOCON_COUNT,
};

const uint8_t MeteoconsBitmaps[] PROGMEM = {
  0x02, 0x00, 0x10, 0x20, 0x83, 0x80, 0x30, 0xF8, 0x08, 0x20, 0x80, 0x80,
  0x00, 0x00, 0x01, 0xFF, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x80, 0x00, 0x40,
  0x08, 0x00, 0x86, 0x00, 0xC0, 0x3E, 0x00, 0x31, 0x80, 0x20, 0x21, 0xD0,
  0x17, 0x08, 0x08, 0x06, 0x0C, 0x01, 0x8C, 0x00, 0x7C, 0x01, 0x00, 0x41,
  0x04, 0x30, 0x02, 0x00, 0x01, 0x00, 0x18, 0x1C, 0x05, 0x02, 0x40, 0x88,
  0x23, 0x18, 0x3D, 0x03, 0x21, 0x87, 0x80, 0x01, 0x00, 0x04, 0x03, 0x00,
  0x04, 0xF8, 0x06, 0xF8, 0x27, 0xE0, 0xBF, 0xF2, 0xFF, 0x0B, 0xFC, 0x27,
  0xE0, 0x6F, 0x84, 0xFC, 0x30, 0x00, 0x04, 0x00, 0x10, 0x00, 0x40, 0x00,
  0xF0, 0x00, 0x30, 0xC0, 0x06, 0x02, 0x0F, 0xFE, 0x30, 0x08, 0x01, 0x07,
  0xFF, 0xFF, 0x08, 0x01, 0x0F, 0xFF, 0xF8, 0x06, 0x06, 0x00, 0x30, 0xC0,
  0x00, 0xF0, 0x00, 0x01, 0xC0, 0x01, 0xE0, 0x3F, 0xF0, 0xC0, 0x00, 0xF0,
  0x00, 0x7F, 0xFF, 0xF8, 0x00, 0x01, 0xFF, 0xF0, 0x00, 0x78, 0x00, 0x38,
  0x00, 0x00, 0x80, 0x00, 0x04, 0x00, 0x0C, 0x20, 0x80, 0x20, 0x08, 0x00,
  0x3E, 0x00, 0x03, 0x18, 0x00, 0x30, 0x60, 0x01, 0x01, 0x00, 0xC9, 0xFB,
  0x80, 0x58, 0x30, 0x0F, 0x80, 0x78, 0xC8, 0x00, 0x6C, 0x00, 0x01, 0xC0,
  0x00, 0x06, 0x00, 0x00, 0x30, 0x00, 0x01, 0xC0, 0x00, 0x13, 0x10, 0x11,
  0x8F, 0xC1, 0xF8, 0x01, 0xF0, 0x00, 0x00, 0x08, 0x00, 0x00, 0xC0, 0x00,
  0x0A, 0x00, 0x00, 0x50, 0x00, 0x02, 0x40, 0x00, 0x11, 0x08, 0x07, 0xF7,
  0xC0, 0x60, 0xCC, 0x3E, 0x03, 0xE3, 0x00, 0x01, 0xB0, 0x00, 0x07, 0x00,
  0x00, 0x18, 0x00, 0x00, 0xC0, 0x00, 0x05, 0x00, 0x00, 0x4C, 0x40, 0x46,
  0x1F, 0x8F, 0xC0, 0x07, 0xC0, 0x00, 0x00, 0x80, 0x00, 0x40, 0x00, 0x00,
  0x86, 0x00, 0x80, 0x3E, 0x00, 0x31, 0x80, 0x20, 0x21, 0xD0, 0x17, 0x00,
  0x00, 0x00, 0x00, 0x3F, 0xFF, 0xE0, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xFC,
  0x00, 0x01, 0xFF, 0xFF, 0x03, 0x00, 0x03, 0x80, 0x03, 0x40, 0x01, 0x20,
  0x00, 0x88, 0x00, 0x46, 0x00, 0x30, 0xF0, 0x00, 0x00, 0xFF, 0xFF, 0x80,
  0x00, 0x00, 0x00, 0x1F, 0xFF, 0xF0, 0x00, 0x07, 0xFF, 0xFC, 0x00, 0xF8,
  0x00, 0x18, 0x30, 0x0F, 0x00, 0x78, 0xC0, 0x00, 0x68, 0x00, 0x00, 0xC0,
  0x00, 0x06, 0x00, 0x00, 0x20, 0x00, 0x00, 0xFF, 0xFF, 0xF8, 0x00, 0x00,
  0x00, 0x00, 0x01, 0xFF, 0xFF, 0xF0, 0x00, 0x00, 0x7F, 0xFF, 0xFC, 0xFF,
  0xF8, 0x00, 0x00, 0x01, 0xFF, 0xF0, 0x00, 0x7F, 0xFC, 0x00, 0x00, 0x00,
  0xFF, 0xF8, 0x00, 0xF8, 0x00, 0x18, 0x30, 0x00, 0x80, 0x80, 0x78, 0x03,
  0xC6, 0x00, 0x03, 0x40, 0x00, 0x06, 0x00, 0x00, 0x30, 0x00, 0x01, 0x80,
  0x00, 0x0B, 0x10, 0x11, 0x8F, 0xC1, 0xF8, 0x01, 0xF0, 0x00, 0x00, 0xF8,
  0x00, 0x18, 0x30, 0x00, 0x80, 0x80, 0x78, 0x03, 0xC6, 0x00, 0x03, 0x40,
  0x00, 0x06, 0x00, 0x00, 0x30, 0x00, 0x01, 0xC0, 0x00, 0x1B, 0x00, 0x01,
  0x8F, 0xC5, 0xF8, 0x02, 0x68, 0x00, 0x06, 0x00, 0x00, 0x60, 0x00, 0x01,
  0x80, 0x00, 0x06, 0x00, 0x00, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0xF0,
  0x00, 0x18, 0x60, 0x01, 0x81, 0x80, 0x78, 0x07, 0xC4, 0x00, 0x03, 0x40,
  0x00, 0x0E, 0x00, 0x00, 0x30, 0x00, 0x01, 0x80, 0x00, 0x1B, 0x00, 0x01,
  0x8F, 0x81, 0xF8, 0x06, 0x1C, 0x00, 0x0F, 0x80, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x0C, 0x00, 0x00, 0x60, 0x00, 0x03, 0x00, 0x00, 0x00, 0xF0,
  0x00, 0x18, 0x60, 0x01, 0x81, 0x80, 0x78, 0x07, 0x86, 0x00, 0x03, 0x40,
  0x00, 0x0E, 0x00, 0x00, 0x30, 0x00, 0x01, 0xC0, 0x00, 0x1B, 0x00, 0x01,
  0x8F, 0xC3, 0xF0, 0x03, 0xF0, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x30,
  0x00, 0x01, 0x80, 0x00, 0x00, 0x03, 0x00, 0x03, 0x18, 0x00, 0x18, 0x00,
  0x00, 0xC0, 0x00, 0x00, 0x1F, 0x00, 0x01, 0x8C, 0x00, 0x38, 0x38, 0x02,
  0x00, 0x27, 0xA0, 0x00, 0x81, 0x00, 0x07, 0xC8, 0x00, 0x20, 0x20, 0x02,
  0x00, 0xF1, 0xE7, 0xF0, 0xF8, 0x00, 0x00, 0x1E, 0x00, 0x01, 0x18, 0x00,
  0x30, 0x70, 0x02, 0x00, 0x67, 0xA0, 0x00, 0x81, 0x00, 0x04, 0x08, 0x00,
  0x3E, 0x20, 0x02, 0x00, 0xE1, 0xE7, 0xF0, 0xF0, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x06, 0x00, 0x00, 0x30, 0x00, 0x01, 0x80, 0x00, 0x00, 0x60,
  0x00, 0x03, 0x00, 0x00, 0x18, 0x00, 0x00, 0xF0, 0x00, 0x18, 0x60, 0x01,
  0x80, 0x80, 0x78, 0x03, 0xC4, 0x00, 0x03, 0x40, 0x00, 0x06, 0x00, 0x00,
  0x30, 0x00, 0x01, 0x80, 0x00, 0x1A, 0x00, 0x01, 0x8F, 0xC3, 0xF8, 0x03,
  0xF0, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x0D, 0xB0, 0x00, 0x7F, 0x80,
  0x00, 0x90, 0x00, 0x1F, 0xE0, 0x00, 0xDB, 0x00, 0x00, 0xC0, 0x00, 0x00,
  0x70, 0x00, 0x0F, 0xE0, 0x00, 0xC1, 0x80, 0x7C, 0x07, 0xC6, 0x00, 0x03,
  0x60, 0x00, 0x0E, 0x00, 0x00, 0x30, 0x00, 0x01, 0x80, 0x00, 0x0E, 0x00,
  0x00, 0xD8, 0x80, 0x8C, 0x7E, 0x0F, 0xC0, 0x1F, 0xC0, 0x2A, 0x00, 0x00,
  0xE0, 0xC2, 0xAD, 0xB6, 0xCE, 0x39, 0xFE, 0xDA, 0xA2, 0x43, 0x80, 0x7F,
  0xAA, 0x03, 0x6C, 0x00, 0x03, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x18, 0x60,
  0x01, 0x00, 0x80, 0x78, 0x07, 0x86, 0x00, 0x03, 0x40, 0x00, 0x0E, 0x00,
  0x00, 0x30, 0x00, 0x01, 0xC0, 0x00, 0x1B, 0x00, 0x01, 0x8F, 0xC3, 0xF0,
  0x03, 0xF0, 0x01, 0x80, 0x0C, 0x0C, 0x30, 0x60, 0x61, 0x83, 0x00, 0x0C,
  0x00, 0x00, 0x00, 0x00, 0x30, 0x30, 0x01, 0x81, 0x80, 0x0C, 0x0C, 0x00,
  0x00, 0x1E, 0x00, 0x01, 0x8C, 0x00, 0x70, 0x38, 0x04, 0x00, 0x20, 0x6F,
  0x80, 0x83, 0x83, 0x04, 0xF0, 0x07, 0xAC, 0x80, 0x06, 0xC0, 0x00, 0x1C,
  0x00, 0x00, 0x60, 0x00, 0x03, 0x00, 0x00, 0x14, 0x00, 0x01, 0x31, 0x01,
  0x18, 0xFC, 0x1F, 0x80, 0x1F, 0x00, 0x00, 0x1E, 0x00, 0x01, 0x0C, 0x00,
  0x70, 0x38, 0x04, 0x00, 0x20, 0x6F, 0x80, 0x83, 0x83, 0x04, 0xF0, 0x07,
  0xAC, 0x00, 0x06, 0x80, 0x00, 0x1C, 0x00, 0x00, 0x60, 0x00, 0x03, 0x00,
  0x00, 0x16, 0x01, 0x03, 0x1F, 0x1B, 0xF0, 0x09, 0x90, 0x00, 0x18, 0x00,
  0x00, 0x60, 0x00, 0x01, 0x80, 0x00, 0x18, 0x00, 0x01, 0x80,
  0x00 // <-- this byte prevents a segfault
};

const GFXglyph MeteoconsGlyphs[] PROGMEM = {
  {     0,  13,  12,  21,    4,  -17 },   // 0x41 'A'
  {    20,  17,  16,  21,    2,  -19 },   // 0x42 'B'
  {    54,  10,  10,  21,    5,  -16 },   // 0x43 'C'
  {    67,  14,  16,  21,    3,  -18 },   // 0x44 'D'
  {    95,  20,  11,  21,    1,  -17 },   // 0x45 'E'
  {   123,  17,  10,  21,    3,  -15 },   // 0x46 'F'
// {     0,   0,   0,   0,    0,    0 },   // 0x47 'G'
  {   145,  21,  20,  21,    0,  -21 },   // 0x48 'H'
  {   198,  21,  18,  21,    0,  -19 },   // 0x49 'I'
  {   246,  17,  16,  21,    2,  -20 },   // 0x4A 'J'
  {   280,  17,  14,  21,    2,  -18 },   // 0x4B 'K'
  {   310,  21,  14,  21,    0,  -18 },   // 0x4C 'L'
  {   347,  13,   9,  21,    4,  -16 },   // 0x4D 'M'
  {   362,  21,  12,  21,    0,  -17 },   // 0x4E 'N'
//  {     0,   0,   0,   0,    0,    0 }, // 0x4F 'O'
  {   394,  21,  18,  21,    0,  -21 },   // 0x50 'P'
  {   442,  21,  18,  21,    0,  -20 },   // 0x51 'Q'
  {   490,  21,  20,  21,    0,  -21 },   // 0x52 'R'
  {   543,  21,  10,  21,    0,  -16 },   // 0x53 'S'
  {   570,  21,  18,  21,    0,  -20 },   // 0x54 'T'
  {   618,  21,  20,  21,    0,  -21 },   // 0x55 'U'
//  {     0,   0,   0,   0,    0,    0 }, // 0x56 'V'
  {   671,  21,  21,  21,    0,  -21 },   // 0x57 'W'
  {   727,  21,  20,  21,    0,  -21 },   // 0x58 'X'
  {   780,  21,  16,  21,    0,  -17 },   // 0x59 'Y'
  {   822,  21,  20,  21,    0,  -21 }    // 0x5A 'Z'
};

_Static_assert(sizeof(MeteoconsGlyphs)/sizeof(*MeteoconsGlyphs) == METEOCON_COUNT, "Mismatch icon count");

const GFXfont Meteocons PROGMEM = {
    (uint8_t *) MeteoconsBitmaps,
    (GFXglyph *)MeteoconsGlyphs, METEOCON_SUNSET_SUNRISE, METEOCON_COUNT - 1,
    22
};

static enum Meteocon meteocon_from_wmo_code(int wmo_code, int is_day) {
    /*
     * Relevant documentations:
     * - https://gist.github.com/stellasphere/9490c195ed2b53c707087c8c2db4ec0c
     * - https://open-meteo.com/en/docs#weather_variable_documentation
     */
    switch (wmo_code) {
    case 0: // Clear sky
    case 1: // Mainly Clear
        return is_day ? METEOCON_SUN : METEOCON_MOON;
    case 2: // Partly Cloudy
        return is_day ? METEOCON_CLOUD_SUN : METEOCON_CLOUD_MOON;
    case 3: // Cloudy
        return METEOCON_CLOUD;
    case 45: case 48: return METEOCON_FOG_SUN; // Foggy -- Rime Fog

    // TODO: 51, 53, 55	Drizzle: Light, moderate, and dense intensity
    // TODO: 56, 57	Freezing Drizzle: Light and dense intensity
    //
    case 61: return METEOCON_RAIN_LIGHT; // Rain Light
    case 63: return METEOCON_RAIN_MEDIUM; // Rain Moderate
    case 65: return METEOCON_RAIN_HAIL; // Rain Heavy

    case 66: return METEOCON_RAIN_LIGHT; // Freezing Rain Light
    case 67: return METEOCON_RAIN_HAIL; // Freezing Rain Heavy

    case 71: case 73: return METEOCON_SNOW_LIGHT; // Snow fall Slight -- Snow fall Moderate
    case 75: case 77: return METEOCON_SNOW_HEAVY; // Snow fall Heavy -- Snow Grains

    case 80: return METEOCON_RAIN_LIGHT; // Rain Showers Light
    case 81: return METEOCON_RAIN_MEDIUM; // Rain Showers Moderate
    case 82: return METEOCON_RAIN_HAIL; // Rain Showers Violent

    case 85: return METEOCON_SNOW_LIGHT; // Snow Showers Slight
    case 86: return METEOCON_SNOW_HEAVY; // Snow Showers Heavy

    case 95: return METEOCON_THUNDERSTORM; // Thunderstorm
    case 96: case 99: return METEOCON_THUNDERSTORM_CLOUD; // Light Thunderstorms With Hail -- Thunderstorm With Hail

    default: return METEOCON_CLOUD;
    }
}
